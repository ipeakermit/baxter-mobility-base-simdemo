########################################################################
# 
# Minimal envt to simulate Baxter, Dataspeed Mobility Base and MIR100
# in single Gazebo session.
# The minimal requirements in practice work out to be custom drivers, mostly.
#
########################################################################

FROM ros:melodic-ros-core
MAINTAINER Ian Peake ian.peake@rmit.edu.au

COPY 02proxy /etc/apt/apt.conf.d/02proxy

# Fix ROS keys
RUN apt-key del 421C365BD9FF1F717815A3895523BAEEB01FA116
RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654

# Update apt because previous images clear this cache
# Commands are combined in single RUN statement with "apt/lists" folder removal to reduce image size
RUN apt update && \
    # Install some base dependencies
    apt install -y \
	iproute2 host wget less sudo vim-tiny iputils-ping python-wstool build-essential

# Ensure Ubuntu and ROS up to date
RUN apt-get update && apt -y dist-upgrade

ENV TERM xterm

########################################################
# Baxter
########################################################

# Setup catkin workspace
ENV CATKIN_WS=/root/ws_baxter
RUN mkdir -p $CATKIN_WS/src
WORKDIR $CATKIN_WS/src

#COPY baxter_simulator_emarolab.rosinstall baxter_simulator.rosinstall
COPY baxter_simulator_dougparkarosa.rosinstall baxter_simulator.rosinstall
#
# https://hub.docker.com/r/davetcoleman/baxter_simulator/dockerfile
# vicariousinc/baxter-simulator:kinetic

# Download source code
RUN wstool init . && \
    #wstool merge https://raw.githubusercontent.com/vicariousinc/baxter_simulator/kinetic-gazebo7/baxter_simulator.rosinstall && \
    wstool merge baxter_simulator.rosinstall && \
    wstool update

RUN apt-get -qq update && \
    # Install some base dependencies
    apt-get -qq install -y \
        # Required for installing dependencies
        python-rosdep \
        # Preferred build tool
        python-catkin-tools
    # Download all dependencies
    
#  remove this line if it breaks install
RUN [ -f /etc/ros/rosdep/sources.list.d/20-default.list ] || rosdep init
RUN rosdep update

COPY 02proxy /etc/apt/apt.conf.d/02proxy

#RUN rosdep install -r -y --from-paths . --ignore-src --skip-keys="gazebo libgazebo7 libgazebo7-dev" --rosdistro ${ROS_DISTRO} --as-root=apt:false && \
RUN rosdep install -r -y --from-paths . --ignore-src --skip-keys="gazebo libgazebo7 libgazebo7-dev" && \
    # Clear apt-cache to reduce image size
    rm -rf /var/lib/apt/lists/*

# Replacing shell with bash for later docker build commands
RUN mv /bin/sh /bin/sh-old && \
    ln -s /bin/bash /bin/sh

# Build repo
WORKDIR $CATKIN_WS

ENV PYTHONIOENCODING UTF-8
RUN catkin config --extend /opt/ros/${ROS_DISTRO} --cmake-args -DCMAKE_BUILD_TYPE=Release && \
    # Status rate is limited so that just enough info is shown to keep Docker from timing out, but not too much
    # such that the Docker log gets too long (another form of timeout)
    catkin build --jobs 16 --limit-status-rate 0.001 --no-notify

#
# For debugging
#

#RUN apt-get update && apt -y install ros-melodic-catkin

########################################################
# Dataspeed mobility base
########################################################

ENV MB_WS /root/mb_ws/
WORKDIR $MB_WS/

RUN wget https://bitbucket.org/DataspeedInc/mobility_base_ros/raw/master/mobility_base.rosinstall -O mobility_base.rosinstall
RUN wget https://raw.githubusercontent.com/ipeakermit/mobility_base_simulator/master/mobility_base_simulator.rosinstall -O mobility_base_simulator.rosinstall

WORKDIR $MB_WS/src
RUN wstool init .

WORKDIR $MB_WS
RUN wstool merge -t src mobility_base.rosinstall
RUN wstool merge -t src mobility_base_simulator.rosinstall

# wstool status needed for proper make?? (https://github.com/vcstools/wstool/issues/77)
RUN wstool status -t src && wstool update -t src
# superseded by ubuntu package
RUN rm -rf /root/mb_ws/src/usb_cam

RUN apt update
RUN apt -y install ros-melodic-joint-state-controller ros-melodic-usb-cam

#RUN apt purge ros-melodic-velodyne-simulator ros-melodic-wamv-gazebo
#RUN apt install -y libavcodec-dev

RUN rosdep update && rosdep install -v -y -r --from-paths src --ignore-src --skip-keys="velodyne velodyne_description velodyne_laserscan velodyne_pointcloud velodyne_driver velodyne_msgs gazebo velodyne_gazebo_plugins libgazebo7 libgazebo7-dev ffmpeg v4l-utils ros-melodic-urg-node ros-melodic-pepperl-fuchs-r2000 usb_cam"

RUN rm -rf build devel
RUN source /root/ws_baxter/devel/setup.bash && \
    catkin config --extend /root/ws_baxter/devel --cmake-args -DCMAKE_BUILD_TYPE=Release && \
    # Status rate is limited so that just enough info is shown to keep Docker from timing out, but not too much
    # such that the Docker log gets too long (another form of timeout)
    catkin build --jobs 1 --limit-status-rate 0.1 --no-notify

#
# VXLab extensions...
#

USER root

# Not required?
# noVNC (http server) is on 6080, and the VNC server is on 5900
#EXPOSE 6080 5900

WORKDIR /root

WORKDIR $CATKIN_WS
ADD baxter.sh baxter.sh
#ADD vncpasswd vncpasswd
#RUN groupadd -r vxlab && adduser --disabled-password --ingroup vxlab --gecos '' vxlab
#RUN echo 'vxlab ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers
#ADD vncstart vncstart

# rosie mounted at runtime
RUN echo 'source ~/rosie/rosenv.gazebo.bash' >> /root/.bashrc

RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
  ros-melodic-teleop-twist-keyboard

RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y \
  telnet lsof psmisc

########################################################
# MIR100
########################################################

# Create ROS workspace
WORKDIR /root/mir_ws/src
RUN git clone https://github.com/dfki-ric/mir_robot
#COPY mir_robot /root/mir_ws/src/mir_robot
WORKDIR /root/mir_ws

# Use rosdep to install all dependencies (including ROS itself)
RUN apt update && rosdep install --from-paths src -i -y --rosdistro melodic

# Why is this not installed already?!
RUN apt update && apt install -y \
    ros-melodic-gazebo-plugins

RUN /bin/bash -c "source /root/mb_ws/devel/setup.bash && \
    catkin init && \
    catkin config --extend /root/mb_ws/devel --install -j 1 -p 1 && \
    catkin_make"

#
# TODO: Offload to another container
RUN apt update && apt install -y \
    ros-melodic-ar-track-alvar ros-melodic-trac-ik

#RUN apt update && apt install -y \
#    ros-melodic-blender-gazebo

###################################################
## dynamic joint attacher
###################################################

#RUN mkdir -p /root/gazebo_link_attacher_ws/src
#WORKDIR /root/gazebo_link_attacher_ws/src
##RUN source melodic/setup.bash && catkin_init_workspace
#RUN source /root/mir_ws/devel/setup.bash && catkin_init_workspace
#RUN git clone https://github.com/beta-robots/gazebo_ros_link_attacher.git
#WORKDIR /root/gazebo_link_attacher_ws/
##RUN source /opt/ros/melodic/setup.bash && catkin_config --extend /root/ catkin_make
#RUN source /opt/ros/melodic/setup.bash && source /root/mir_ws/devel/setup.bash && catkin config --extend /root/mir_ws/devel && catkin_make

WORKDIR /root/rosie

# install, build ros_control:
#   http://wiki.ros.org/ros_control
# install four_wheel_steering_msgs
#   https://github.com/ros-drivers/four_wheel_steering_msgs

#CMD ["/root/rosie/simstart"]

########################################################
# Update
########################################################

# Change to virtual joint?
# https://github.com/ros-industrial/universal_robot/pull/284#issuecomment-613850762
RUN apt update && apt -y dist-upgrade

########################################################
# NVidia Driver - To Enable X output over Hardware-accelerated OpenGL
########################################################

#ENV NV_VER=390.138 - desktop task switching slows down??
ENV NV_VER=450.66
WORKDIR /root
RUN apt update && apt install kmod
# Use the NVidia driver that corresponds to the version on your host
#RUN wget http://us.download.nvidia.com/XFree86/Linux-x86_64/450.57/NVIDIA-Linux-x86_64-450.57.run
RUN wget http://us.download.nvidia.com/XFree86/Linux-x86_64/${NV_VER}/NVIDIA-Linux-x86_64-${NV_VER}.run
RUN chmod +x NVIDIA-Linux-x86_64-${NV_VER}.run
RUN bash -c 'echo $PATH ; /root/NVIDIA-Linux-x86_64-${NV_VER}.run -a -N --ui=none --no-kernel-module'

########################################################
# Baxter - MoveIt
########################################################

WORKDIR /root/ws_baxter/src
RUN git clone https://github.com/ros-planning/moveit_robots.git
RUN catkin build --jobs 16 --limit-status-rate 0.001 --no-notify
RUN apt update && apt -y install ros-melodic-moveit-simple-controller-manager ros-melodic-moveit-planners ros-melodic-moveit-visual-tools ros-melodic-moveit-ros-visualization ros-melodic-moveit-commander ros-melodic-tf2-web-republisher ros-melodic-rosbridge-suite

WORKDIR /root/rosie
ENTRYPOINT ["/root/rosie/rosie-sim-guest-runner"]
#CMD [""]
